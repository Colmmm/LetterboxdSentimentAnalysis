{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":194398829,"sourceType":"kernelVersion"},{"sourceId":194399329,"sourceType":"kernelVersion"}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## 1) Read in data","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nfrom datasets import Dataset\nfrom sklearn.model_selection import train_test_split\n\n# Load your dataset (assuming a CSV file)\nreviews_from_movies_df = pd.read_csv(\"/kaggle/input/movie-scraper/movie_reviews.csv\", index_col=0)\nreviews_from_users_df = pd.read_csv(\"/kaggle/input/user-scraper/user_reviews.csv\", index_col=0)\n\n# combine them\nreviews_df = pd.concat([reviews_from_movies_df, reviews_from_users_df], ignore_index=True)\n\nprint(reviews_df.shape, reviews_from_movies_df.shape, reviews_from_users_df.shape)\nreviews_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-28T20:25:59.777955Z","iopub.execute_input":"2024-08-28T20:25:59.778377Z","iopub.status.idle":"2024-08-28T20:26:00.464945Z","shell.execute_reply.started":"2024-08-28T20:25:59.778338Z","shell.execute_reply":"2024-08-28T20:26:00.463774Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"(98834, 7) (50000, 7) (48834, 7)\n","output_type":"stream"},{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"                              user_url  \\\n0       https://letterboxd.com/aykins/   \n1     https://letterboxd.com/maiimaoo/   \n2     https://letterboxd.com/ambres29/   \n3  https://letterboxd.com/whosaymaree/   \n4     https://letterboxd.com/ronzcarm/   \n\n                                         review_text  rating  review_date  \\\n0                   feminism displayed at its worst.     0.4  28 Aug 2024   \n1  Ryan Gosling... Get in my bed RN please.\\nThis...     1.0  21 Jul 2023   \n2  #decue avec tout ce que j'avais vu dessus j'pe...     0.4  28 Aug 2024   \n3  im sorry to all the barbies hair that i’ve cut...     1.0  28 Aug 2024   \n4                                       I'm just Ken     0.8  28 Aug 2024   \n\n  movie_title  movie_year                            movie_url  \n0      Barbie      2023.0  https://letterboxd.com/film/barbie/  \n1      Barbie      2023.0  https://letterboxd.com/film/barbie/  \n2      Barbie      2023.0  https://letterboxd.com/film/barbie/  \n3      Barbie      2023.0  https://letterboxd.com/film/barbie/  \n4      Barbie      2023.0  https://letterboxd.com/film/barbie/  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>user_url</th>\n      <th>review_text</th>\n      <th>rating</th>\n      <th>review_date</th>\n      <th>movie_title</th>\n      <th>movie_year</th>\n      <th>movie_url</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>https://letterboxd.com/aykins/</td>\n      <td>feminism displayed at its worst.</td>\n      <td>0.4</td>\n      <td>28 Aug 2024</td>\n      <td>Barbie</td>\n      <td>2023.0</td>\n      <td>https://letterboxd.com/film/barbie/</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>https://letterboxd.com/maiimaoo/</td>\n      <td>Ryan Gosling... Get in my bed RN please.\\nThis...</td>\n      <td>1.0</td>\n      <td>21 Jul 2023</td>\n      <td>Barbie</td>\n      <td>2023.0</td>\n      <td>https://letterboxd.com/film/barbie/</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>https://letterboxd.com/ambres29/</td>\n      <td>#decue avec tout ce que j'avais vu dessus j'pe...</td>\n      <td>0.4</td>\n      <td>28 Aug 2024</td>\n      <td>Barbie</td>\n      <td>2023.0</td>\n      <td>https://letterboxd.com/film/barbie/</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>https://letterboxd.com/whosaymaree/</td>\n      <td>im sorry to all the barbies hair that i’ve cut...</td>\n      <td>1.0</td>\n      <td>28 Aug 2024</td>\n      <td>Barbie</td>\n      <td>2023.0</td>\n      <td>https://letterboxd.com/film/barbie/</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>https://letterboxd.com/ronzcarm/</td>\n      <td>I'm just Ken</td>\n      <td>0.8</td>\n      <td>28 Aug 2024</td>\n      <td>Barbie</td>\n      <td>2023.0</td>\n      <td>https://letterboxd.com/film/barbie/</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## 2) Preprocess dataset (mainly remove non-English reviews for now)","metadata":{}},{"cell_type":"code","source":"!pip install langdetect","metadata":{"execution":{"iopub.status.busy":"2024-08-28T20:27:10.136582Z","iopub.execute_input":"2024-08-28T20:27:10.137019Z","iopub.status.idle":"2024-08-28T20:27:27.134790Z","shell.execute_reply.started":"2024-08-28T20:27:10.136980Z","shell.execute_reply":"2024-08-28T20:27:27.133360Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Collecting langdetect\n  Downloading langdetect-1.0.9.tar.gz (981 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m981.5/981.5 kB\u001b[0m \u001b[31m11.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: six in /opt/conda/lib/python3.10/site-packages (from langdetect) (1.16.0)\nBuilding wheels for collected packages: langdetect\n  Building wheel for langdetect (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for langdetect: filename=langdetect-1.0.9-py3-none-any.whl size=993227 sha256=275e953787b853f0d87554202a3210b982f4574df273941a0fc6b8c2b3753221\n  Stored in directory: /root/.cache/pip/wheels/95/03/7d/59ea870c70ce4e5a370638b5462a7711ab78fba2f655d05106\nSuccessfully built langdetect\nInstalling collected packages: langdetect\nSuccessfully installed langdetect-1.0.9\n","output_type":"stream"}]},{"cell_type":"code","source":"from langdetect import detect, DetectorFactory\nfrom langdetect.lang_detect_exception import LangDetectException\nfrom tqdm.notebook import tqdm\n\ntqdm.pandas()\n\n# Ensures consistent results\nDetectorFactory.seed = 0\n\n# Function to detect language\ndef detect_language(text):\n    try:\n        return detect(text)\n    except LangDetectException:\n        return \"unknown\"\n\n# Add a language column\nreviews_df['language'] = reviews_df['review_text'].progress_apply(detect_language)\n\n# Filter to keep only English reviews\nreviews_df = reviews_df[reviews_df['language'] == 'en']\n\n# Drop the language column if no longer needed\nreviews_df.drop(columns=['language'], inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-28T20:28:17.624524Z","iopub.execute_input":"2024-08-28T20:28:17.624980Z"},"trusted":true},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"  0%|          | 0/98834 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8003c1c3a8fe48428c7978f626dbc5a0"}},"metadata":{}}]},{"cell_type":"markdown","source":"## 3) Save output data","metadata":{}},{"cell_type":"code","source":"# Drop unwanted columns or reorder them (to simplify for now)\nreviews_df = reviews_df[['review_text', 'rating']]\n\n# Save up to here\nreviews_df.to_csv(\"/kaggle/working/processed_reviews.csv\", index=False)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"reviews_df.head()","metadata":{},"execution_count":null,"outputs":[]}]}